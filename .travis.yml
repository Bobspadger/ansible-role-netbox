language: python
python:
  - "2.7"
  - "3.6"
sudo: required
dist: trusty
cache:
  directories: [ '$HOME/lxc' ]
  pip: true
matrix:
  fast_finish: true
services:
- postgresql
addons:
  postgresql: "9.4"
env:
- ANSIBLE_GIT_VERSION='devel' # 2.6.x development branch
- ANSIBLE_VERSION='<2.6.0' # 2.5.x
matrix:
  fast_finish: true
  include:
    - python: '2.7'
      env: ANSIBLE_VERSION='<2.5.0' # 2.4.x
install:
- if [ "$ANSIBLE_GIT_VERSION" ]; then pip install "https://github.com/ansible/ansible/archive/${ANSIBLE_GIT_VERSION}.tar.gz";
  else pip install "ansible${ANSIBLE_VERSION}"; fi
- ansible --version
- ansible-galaxy install lae.travis-lxc
- ansible-playbook tests/install.yml -i tests/inventory
- git archive --format tar.gz HEAD > lae.netbox.tar.gz && ansible-galaxy install
  lae.netbox.tar.gz,$(git rev-parse HEAD),lae.netbox && rm lae.netbox.tar.gz
before_script:
- echo "host all all 10.0.3.0/24 trust" | sudo tee -a /etc/postgresql/9.4/main/pg_hba.conf
- echo "listen_addresses = '*'" | sudo tee -a /etc/postgresql/9.4/main/postgresql.conf
- sudo service postgresql restart
- cd tests/
script:
- ansible-playbook -i inventory deploy.yml --syntax-check
- ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook -i inventory deploy.yml
- 'ANSIBLE_STDOUT_CALLBACK=debug unbuffer ansible-playbook -vvi inventory
  deploy.yml > play.log || (e=$?; cat play.log; exit $e); printf "Idempotence: ";
  grep -A1 "PLAY RECAP" play.log | grep -qP "changed=0 .*failed=0 .*"
  && (echo "PASS"; exit 0) || (echo "FAIL"; cat play.log; exit 1)'
- ANSIBLE_STDOUT_CALLBACK=debug ansible-playbook -i inventory -v test.yml
notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
  irc:
    on_success: change
    channels:
      secure: "uNnWy3ToabL7W4mP2jTqdbV3do408Sl4N53D9T3vvcpCOLrdHeSagq+Juto3q4Z2bF/zpwHp05y5pJU0N3Fsb4W1C2jUnGvbwEYFRK+cTUsMUT+rrcHByF2e/nMBi1GEPysGfXtNMlEIe+rlKNTCFvfngnp2lTmcs4QBtQh+eS1YQBr8mdizCDWi28FygMTma87VdQ10Af0XkXWHgVHYfh4MARGfkMmCWjZqBHaKV5xTZ7xVzndGN7T3XiehRnD44iQNT6PaYZFRqUWV8S8BROhwOZIlgwEX3t/gxiGKLOHoI/cubm2H8aKEhSMl18MUZxET7CK4vwVpEnlqTQihsLkkuM7zfvsUWEQA03ZsZDAAnnIykbfQDMVBexOfZwv/5xdX5qTy2aghr7c/+LUf8N86Hj+TDGfWBioNhuPYBj5lghw0a+p002kKjjmgr2tTZpghIdHzmRqjne2ZbcIH3lBMWftzDHtBxuUTAaxaGP75VqH0JF5lGUvZL49VPtb8tGff0BVi0+YuHdlDAoIL6ACC6qQlgyVEZhZ170QS0Ez9s+pkMa1rpj4BsxBKZog3TKEad4K+CcewarwCgCEGxG2S4E1ugeZoCVtP8Gr4CC/51axhbATCPqYSQnNXKXo6vP3Gw3VBOcKx/Ku8uR+Kcdj7oEoAcJRF5eZFMG1y5Wk="
